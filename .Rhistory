View(df2)
df3 <- df %>% filter(cellID == 282932)
df3 <- df3 %>% spread(key = Year, value = Value)
View(df2)
plot(as.numeric(df2[1, 3:ncol(df2)]))
plot(as.numeric(df2[1, 3:ncol(df2)]), ty = "l")
plot(as.numeric(df3[1, 3:ncol(df3)]), ty = "l", add = T)
plot(as.numeric(df2[1, 3:ncol(df2)]), ty = "l")
plot(as.numeric(df2[1, 3:ncol(df2)]), ty = "l")
lines(as.numeric(df3[1, 3:ncol(df3)]), col = 2)
colnames(df2)[3:ncol(df2)] <- paste0("Y", colnames(df2)[3:ncol(df2)])
colnames(df3)[3:ncol(df3)] <- paste0("Y", colnames(df3)[3:ncol(df3)])
sample.matrix.list3 <- list(data.matrix(df2[,3:ncol(df2)]), data.matrix(df3[,3:ncol(df3)]))
parDist(x = sample.matrix.list3, method = "dtw")
1:nrow(df2)
matrix(data = df2[1, 3:ncol(df2)], nrow = 1, byrow = T)
as.numeric(df2[i, 3:ncol(df2)])
matrix(data = as.numeric(df2[1, 3:ncol(df2)]), nrow = 1, byrow = T)
for(i in 1:nrow(df2)){
l <- list(matrix(data = as.numeric(df2[i, 3:ncol(df2)]), nrow = 1, byrow = T),
matrix(data = as.numeric(df3[i, 3:ncol(df3)]), nrow = 1, byrow = T))
print(parDist(x = l, method = "dtw"))
}
sum(c(0.08918634, 0.008196721, 11, 1, 501, 1))
parDist(x = sample.matrix.list3, method = "dtw")
gi <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/General_indexes/dist_global_index_ciat_palmira.rds")
head(gi)
gi <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/General_indexes/global_index_estandarizados_frijol.rds")
head(gi)
gi <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/General_indexes/tabla_rbind_frijol_europa.rds")
head(gi)
gi$Variable %>% unique()
gi <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/Crop_indexes/global_index_estandarizados_frijol_calor.rds")
head(gi)
gi <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/Crop_indexes/dist_global_index_calor_ciat_palmira.rds")
head(gi)
crop = "Bean"
crop %in% c("Bean")
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(maptools)){install.packages('maptools'); library(maptools)} else {library(maptools)})
suppressMessages(if(!require(rgdal)){install.packages('rgdal'); library(rgdal)} else {library(rgdal)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
?extract
watbal_loc <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Input_data/_soils/Water_balance/watbal_europa.rds")
plot(watbal_loc$ERATIO, ty = "l")
plot(watbal_loc$ERATIO[1:365], ty = "l")
plot(watbal_loc$ERATIO[1:(365*2)], ty = "l")
View(watbal_loc)
View(watbal_loc)
plot(watbal_loc$ERATIO, ty = "l")
summary(watbal_loc$RUNOFF)
plot(watbal_loc$RUNOFF, ty = "l")
plot(watbal_loc$PREC, ty = "l")
plot(watbal_loc$RAIN, ty = "l")
plot(watbal_loc$CUM_RAIN, ty = "l")
View(watbal_loc)
library(tidyverse)
# Load packages
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(parallel)){install.packages('parallel'); library(parallel)} else {library(parallel)})
suppressMessages(if(!require(googlesheets)){install.packages("googlesheets");library(googlesheets)}else{library(googlesheets)})
crop = "Bean"; ncores = 15
# Loading information from Google Drive
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials")
View(trials)
# Loading information from Google Drive
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials")
View(trials)
options(warn = -1); options(scipen = 999)
View(trials)
trials %>% glimpse()
# Loading information from Google Drive
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials")
View(trials)
?read_csv
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials", col_types = list(col_character()))
View(trials)
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials", col_types = list(rep(col_character(), 12)))
rep(col_character(), 12)
rep(1, 12)
rep(col_character(), 12)
# Loading information from Google Drive
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials", col_types = rep("c", 12))
trials <- trials %>% gs_read(ws = "Trials", col_types = "c")
# Loading information from Google Drive
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials", col_types = "c")
trials <- trials %>% gs_read(ws = "Trials")
# Loading information from Google Drive
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials")
trials$Longitude
as.character(trials$Longitude)
# Loading information from Google Drive
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials", col_types = col(Longitude = col_character(), Latitude = col_character()))
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials", col_types = cols(Longitude = col_character(),
Latitude = col_character()))
View(trials)
trials$Longitude <- gsub(pattern = ",", replacement = ".", x = trials$Longitude) %>% as.character() %>% as.numeric()
trials$Latitude <- gsub(pattern = ",", replacement = ".", x = trials$Latitude) %>% as.character() %>% as.numeric()
glimpse(trials)
trials <- trials %>% filter(Crop == crop)
trials
library(parallelDist)
tmp.mat <- matrix(c(1:40), ncol = 10)
sample.matrix.list <- list(tmp.mat[1:2,], tmp.mat[3:4,])
sample.matrix.list
parDist(x = sample.matrix.list, method = "dtw")
sample.matrix.list2 <- sample.matrix.list
sample.matrix.list2[[1]] <- cbind(as.matrix(t(sample.matrix.list2[[1]][1,])), as.matrix(t(sample.matrix.list2[[1]][2,])))
sample.matrix.list2[[2]] <- cbind(as.matrix(t(sample.matrix.list2[[2]][1,])), as.matrix(t(sample.matrix.list2[[2]][2,])))
sample.matrix.list2
parDist(x = sample.matrix.list2, method = "dtw")
# Multidimensional case with standarize
sample.matrix.list.std <- sample.matrix.list
apply(sample.matrix.list.std[[1]], MARGIN = 1, FUN = scale)
t(apply(sample.matrix.list.std[[1]], MARGIN = 1, FUN = scale))
sample.matrix.list.std[[1]] <- apply(sample.matrix.list.std[[1]], MARGIN = 1, FUN = scale)
sample.matrix.list.std[[2]] <- apply(sample.matrix.list.std[[2]], MARGIN = 1, FUN = scale)
parDist(x = sample.matrix.list.std, method = "dtw")
sample.matrix.list.std
# Multidimensional case with standarize
sample.matrix.list.std <- sample.matrix.list
sample.matrix.list.std[[1]] <- t(apply(sample.matrix.list.std[[1]], MARGIN = 1, FUN = scale))
sample.matrix.list.std[[2]] <- t(apply(sample.matrix.list.std[[2]], MARGIN = 1, FUN = scale))
sample.matrix.list.std
library(tidyverse)
df <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/General_indexes/tabla_rbind_frijol_europa.rds")
df <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/General_indices/tabla_rbind_frijol_europa.rds")
df <- df %>% filter(Variable != "Error in xj[i] : only 0's may be mixed with negative subscripts\n")
df2 <- df %>% filter(cellID == 287280)
df2 <- df2 %>% spread(key = Year, value = Value)
df3 <- df %>% filter(cellID == 282932)
df3 <- df3 %>% spread(key = Year, value = Value)
colnames(df2)[3:ncol(df2)] <- paste0("Y", colnames(df2)[3:ncol(df2)])
colnames(df3)[3:ncol(df3)] <- paste0("Y", colnames(df3)[3:ncol(df3)])
sample.matrix.list3 <- list(data.matrix(df2[,3:ncol(df2)]), data.matrix(df3[,3:ncol(df3)]))
sample.matrix.list3
sample.matrix.list3[[1]]
t(apply(X = sample.matrix.list3[[1]], MARGIN = 1, FUN = scale))
sample.matrix.list3[[1]] <- t(apply(X = sample.matrix.list3[[1]], MARGIN = 1, FUN = scale))
sample.matrix.list3[[2]] <- t(apply(X = sample.matrix.list3[[2]], MARGIN = 1, FUN = scale))
parDist(x = sample.matrix.list3, method = "dtw")
sample.matrix.list3
sample.matrix.list3 <- list(data.matrix(df2[,3:ncol(df2)]), data.matrix(df3[,3:ncol(df3)]))
sample.matrix.list3[[2]]
parDist(x = sample.matrix.list3, method = "dtw")
for(i in 1:nrow(df2)){
l <- list(matrix(data = as.numeric(df2[i, 3:ncol(df2)]), nrow = 1, byrow = T),
matrix(data = as.numeric(df3[i, 3:ncol(df3)]), nrow = 1, byrow = T))
print(parDist(x = l, method = "dtw"))
}
sum(c(0.08918634, 0.008196721, 11, 1, 501, 1))
install.packages(c("arules", "NMF"))
# Load packages
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(parallel)){install.packages('parallel'); library(parallel)} else {library(parallel)})
suppressMessages(if(!require(googlesheets)){install.packages("googlesheets");library(googlesheets)}else{library(googlesheets)})
suppressMessages(if(!require(parallelDist)){install.packages("parallelDist");library(parallelDist)}else{library(parallelDist)})
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){
root <- "/mnt/workspace_cluster_9"
base <- readRDS(paste0(root, "/CWR_pre-breeding/Input_data/AgMerra_template.RDS"))
} else {
if(OSys == "Windows"){
root <- "//dapadfs/Workspace_cluster_9"
base <- readRDS(paste0(root, "/CWR_pre-breeding/Input_data/AgMerra_template.RDS"))
}
}; rm(OSys)
crop = "Bean"; ncores = 15
# Our case
library(tidyverse)
df <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/General_indices/bean_general_indices_oceania.rds")
df <- df %>% filter(Variable %in% c("TMEAN", "GDD_1", "GDD_2", "ND_t35", "TOTRAIN", "CDD", "P5D", "P_95"))
df2 <- df %>% filter(cellID == 287280)
df2 <- df2 %>% spread(key = Year, value = Value)
df2
df3 <- df %>% filter(cellID == 282932)
df3 <- df3 %>% spread(key = Year, value = Value)
df3
df$cellID %>% unique
df2 <- df %>% filter(cellID == "287280")
df2 <- df2 %>% spread(key = Year, value = Value)
df2 <- df %>% filter(cellID == "627688")
df2 <- df2 %>% spread(key = Year, value = Value)
df3 <- df %>% filter(cellID == "709769")
df3 <- df3 %>% spread(key = Year, value = Value)
colnames(df2)[3:ncol(df2)] <- paste0("Y", colnames(df2)[3:ncol(df2)])
colnames(df3)[3:ncol(df3)] <- paste0("Y", colnames(df3)[3:ncol(df3)])
df2
df3
sample.matrix.list3 <- list(data.matrix(df2[,3:ncol(df2)]), data.matrix(df3[,3:ncol(df3)]))
sample.matrix.list3[[1]] <- t(apply(X = sample.matrix.list3[[1]], MARGIN = 1, FUN = scale))
sample.matrix.list3[[2]] <- t(apply(X = sample.matrix.list3[[2]], MARGIN = 1, FUN = scale))
parDist(x = sample.matrix.list3, method = "dtw")
for(i in 1:nrow(df2)){
l <- list(matrix(data = as.numeric(df2[i, 3:ncol(df2)]), nrow = 1, byrow = T),
matrix(data = as.numeric(df3[i, 3:ncol(df3)]), nrow = 1, byrow = T))
print(parDist(x = l, method = "dtw"))
}
for(i in 1:nrow(df2)){
l <- list(matrix(data = as.numeric(df2[i, 3:ncol(df2)]), nrow = 1, byrow = T),
matrix(data = as.numeric(df3[i, 3:ncol(df3)]), nrow = 1, byrow = T))
print(parDist(x = l, method = "dtw"))
}
lenght(sample.matrix.list3)
length(sample.matrix.list3)
sample.matrix.list3
sample.matrix.list3 <- list(data.matrix(df2[,3:ncol(df2)]), data.matrix(df3[,3:ncol(df3)]))
parDist(x = sample.matrix.list3, method = "dtw")
install.packages("arules")
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(parallel)){install.packages('parallel'); library(parallel)} else {library(parallel)})
suppressMessages(if(!require(googlesheets)){install.packages("googlesheets");library(googlesheets)}else{library(googlesheets)})
suppressMessages(if(!require(parallelDist)){install.packages("parallelDist");library(parallelDist)}else{library(parallelDist)})
# Load packages
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(parallel)){install.packages('parallel'); library(parallel)} else {library(parallel)})
suppressMessages(if(!require(googlesheets)){install.packages("googlesheets");library(googlesheets)}else{library(googlesheets)})
suppressMessages(if(!require(parallelDist)){install.packages("parallelDist");library(parallelDist)}else{library(parallelDist)})
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){
root <- "/mnt/workspace_cluster_9"
base <- readRDS(paste0(root, "/CWR_pre-breeding/Input_data/AgMerra_template.RDS"))
} else {
if(OSys == "Windows"){
root <- "//dapadfs/Workspace_cluster_9"
base <- readRDS(paste0(root, "/CWR_pre-breeding/Input_data/AgMerra_template.RDS"))
}
}; rm(OSys)
crop = "Bean"
cat(">>> Loading data from Google Drive ...\n")
trials <- gs_ls("crop_information_states")
trials <- gs_title("crop_information_states")
trials %>% gs_browse(ws = "Trials")
trials <- trials %>% gs_read(ws = "Trials", col_types = cols(Longitude = col_character(),
Latitude = col_character()))
trials$Longitude <- gsub(pattern = ",", replacement = ".", x = trials$Longitude) %>% as.character() %>% as.numeric()
trials$Latitude <- gsub(pattern = ",", replacement = ".", x = trials$Latitude) %>% as.character() %>% as.numeric()
trials <- trials %>% filter(Crop == crop)
View(trials)
root
# Loading agroclimatic indices
ind_africa  <- readRDS(paste0(root, "/CWR_pre-breeding/Results/Bean/General_indices/bean_general_indices_africa.rds"))
ind_america <- readRDS(paste0(root, "/CWR_pre-breeding/Results/Bean/General_indices/bean_general_indices_america.rds"))
ind_asia    <- readRDS(paste0(root, "/CWR_pre-breeding/Results/Bean/General_indices/bean_general_indices_asia.rds"))
ind_europa  <- readRDS(paste0(root, "/CWR_pre-breeding/Results/Bean/General_indices/bean_general_indices_europa.rds"))
ind_oceania <- readRDS(paste0(root, "/CWR_pre-breeding/Results/Bean/General_indices/bean_general_indices_oceania.rds"))
rm(crop)
gc()
g <- gc()
rm(g)
View(ind_europa)
library(parallelDist)
library(parallelDist)
library(parallelDist)
# Our case
library(tidyverse)
df <- readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Results/Bean/General_indices/bean_general_indices_oceania.rds")
df <- df %>% filter(Variable %in% c("TMEAN", "GDD_1", "GDD_2", "ND_t35", "TOTRAIN", "CDD", "P5D", "P_95"))
View(df)
df2 <- df %>% filter(cellID == "627688")
df2 <- df2 %>% spread(key = Year, value = Value)
df3 <- df %>% filter(cellID == "709769")
df3 <- df3 %>% spread(key = Year, value = Value)
colnames(df2)[3:ncol(df2)] <- paste0("Y", colnames(df2)[3:ncol(df2)])
colnames(df3)[3:ncol(df3)] <- paste0("Y", colnames(df3)[3:ncol(df3)])
df2
df3 <- df %>% filter(cellID == "709769")
df3 <- df3 %>% spread(key = Year, value = Value)
df2 <- df %>% filter(cellID == "627688")
df2 <- df2 %>% spread(key = Year, value = Value)
df3 <- df %>% filter(cellID == "709769")
df3 <- df3 %>% spread(key = Year, value = Value)
colnames(df2)[3:ncol(df2)] <- paste0("Y", colnames(df2)[3:ncol(df2)])
colnames(df3)[3:ncol(df3)] <- paste0("Y", colnames(df3)[3:ncol(df3)])
sample.matrix.list3 <- list(data.matrix(df2[,3:ncol(df2)]), data.matrix(df3[,3:ncol(df3)]))
sample.matrix.list3[[1]] <- t(apply(X = sample.matrix.list3[[1]], MARGIN = 1, FUN = scale))
sample.matrix.list3[[2]] <- t(apply(X = sample.matrix.list3[[2]], MARGIN = 1, FUN = scale))
parDist(x = sample.matrix.list3, method = "dtw")
df2 <- df %>% filter(cellID == "627688")
df2 <- df2 %>% spread(key = Year, value = Value)
df3 <- df %>% filter(cellID == "709769")
df3 <- df3 %>% spread(key = Year, value = Value)
colnames(df2)[3:ncol(df2)] <- paste0("Y", colnames(df2)[3:ncol(df2)])
colnames(df3)[3:ncol(df3)] <- paste0("Y", colnames(df3)[3:ncol(df3)])
sample.matrix.list3 <- list(data.matrix(df2[,3:ncol(df2)]), data.matrix(df3[,3:ncol(df3)]))
parDist(x = sample.matrix.list3, method = "dtw")
df2
# Varying by coordinate
refCoord <- raster::cellFromXY(object = base, xy = trials[i, c("Longitude", "Latitude")])
i=1
# Varying by coordinate
refCoord <- raster::cellFromXY(object = base, xy = trials[i, c("Longitude", "Latitude")])
trials
base
# Varying by coordinate
refCoord <- raster::cellFromXY(object = base, xy = trials[i, c("Longitude", "Latitude")])
trials[i, c("Longitude", "Latitude")]
trials[i, c("Longitude", "Latitude")] %>% as.data.frame
# Varying by coordinate
refCoord <- raster::cellFromXY(object = base, xy = trials[i, c("Longitude", "Latitude")] %>% as.data.frame)
refCoord
giWorld <- rbind(ind_africa, ind_asia, ind_europa, ind_oceania)
rm(ind_africa, ind_america, ind_asia, ind_europa, ind_oceania)
# List of pixels
pixelList <- giWorld$cellID %>% unique %>% sort
pixelList
refCoord
giWorld %>% filter(cellID == refCoord)
refIndices <- giWorld %>% filter(cellID == pixelList[1])
cmpIndices <- cmpIndices %>% spread(key = Year, value = Value)
refIndices <- refIndices %>% spread(key = Year, value = Value)
refIndices
j=2
j=2
# Identify indices from compared pixel
cmpIndices <- giWorld %>% filter(cellID == pixelList[j])
cmpIndices <- cmpIndices %>% spread(key = Year, value = Value)
colnames(refIndices)[3:ncol(refIndices)] <- paste0("Y", colnames(refIndices)[3:ncol(refIndices)])
colnames(cmpIndices)[3:ncol(cmpIndices)] <- paste0("Y", colnames(cmpIndices)[3:ncol(cmpIndices)])
matrix.list <- list(data.matrix(refIndices[,3:ncol(refIndices)]), data.matrix(cmpIndices[,3:ncol(cmpIndices)]))
calc_multivariate_dtw <- function(data = matrix.list, scaled = T){
if(scaled){
matrix.list[[1]] <- t(apply(X = matrix.list[[1]], MARGIN = 1, FUN = scale))
matrix.list[[2]] <- t(apply(X = matrix.list[[2]], MARGIN = 1, FUN = scale))
calcDTW <- parallelDist::parDist(x = matrix.list, method = "dtw")
} else {
calcDTW <- parallelDist::parDist(x = matrix.list, method = "dtw")
}
return(calcDTW)
}
calc_multivariate_dtw(data = matrix.list, scaled = T)
calc_multivariate_dtw(data = matrix.list, scaled = F)
t(apply(X = matrix.list[[1]], MARGIN = 1, FUN = scale))
t(apply(X = matrix.list[[2]], MARGIN = 1, FUN = scale))
apply(X = matrix.list[[1]], MARGIN = 1, FUN = scale)
apply(X = matrix.list[[1]], MARGIN = 1, FUN = sd)
means_list <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = mean)
means_list
means_list1 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = mean)
means_list2 <- apply(X = matrix.list[[2]], MARGIN = 1, FUN = mean)
means_list1
means_list2
sds_list1 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = sd)
sds_list2 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = sd)
sds_list1
sds_list2
which(sds_list1 == 0)
matrix.list[[1]][which(sds_list1 == 0),]
means_list1[which(sds_list1 == 0)]
matrix.list[[1]][which(sds_list1 == 0),] <- means_list1[which(sds_list1 == 0)]
matrix.list[[1]]
matrix.list <- list(data.matrix(refIndices[,3:ncol(refIndices)]), data.matrix(cmpIndices[,3:ncol(cmpIndices)]))
calc_multivariate_dtw <- function(data = matrix.list, scaled = T){
if(scaled){
means_list1 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = mean)
means_list2 <- apply(X = matrix.list[[2]], MARGIN = 1, FUN = mean)
sds_list1 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = sd)
sds_list2 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = sd)
matrix.list[[1]] <- t(apply(X = matrix.list[[1]], MARGIN = 1, FUN = scale))
matrix.list[[2]] <- t(apply(X = matrix.list[[2]], MARGIN = 1, FUN = scale))
matrix.list[[1]][which(sds_list1 == 0),] <- means_list1[which(sds_list1 == 0)]
matrix.list[[2]][which(sds_list2 == 0),] <- means_list2[which(sds_list2 == 0)]
rm(means_list1, means_list2, sds_list1, sds_list2)
calcDTW <- parallelDist::parDist(x = matrix.list, method = "dtw")
} else {
calcDTW <- parallelDist::parDist(x = matrix.list, method = "dtw")
}
return(calcDTW)
}
calc_multivariate_dtw(data = matrix.list, scaled = F)
calc_multivariate_dtw(data = matrix.list, scaled = T)
prvResults <- c()
prvResults <- c()
for(j in 2:length(pixelList)){
# Identify indices from compared pixel
cmpIndices <- giWorld %>% filter(cellID == pixelList[j])
cmpIndices <- cmpIndices %>% spread(key = Year, value = Value)
colnames(refIndices)[3:ncol(refIndices)] <- paste0("Y", colnames(refIndices)[3:ncol(refIndices)])
colnames(cmpIndices)[3:ncol(cmpIndices)] <- paste0("Y", colnames(cmpIndices)[3:ncol(cmpIndices)])
matrix.list <- list(data.matrix(refIndices[,3:ncol(refIndices)]), data.matrix(cmpIndices[,3:ncol(cmpIndices)]))
calc_multivariate_dtw <- function(data = matrix.list, scaled = T){
if(scaled){
means_list1 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = mean)
means_list2 <- apply(X = matrix.list[[2]], MARGIN = 1, FUN = mean)
sds_list1 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = sd)
sds_list2 <- apply(X = matrix.list[[1]], MARGIN = 1, FUN = sd)
matrix.list[[1]] <- t(apply(X = matrix.list[[1]], MARGIN = 1, FUN = scale))
matrix.list[[2]] <- t(apply(X = matrix.list[[2]], MARGIN = 1, FUN = scale))
matrix.list[[1]][which(sds_list1 == 0),] <- means_list1[which(sds_list1 == 0)]
matrix.list[[2]][which(sds_list2 == 0),] <- means_list2[which(sds_list2 == 0)]
rm(means_list1, means_list2, sds_list1, sds_list2)
calcDTW <- parallelDist::parDist(x = matrix.list, method = "dtw")
} else {
calcDTW <- parallelDist::parDist(x = matrix.list, method = "dtw")
}
return(calcDTW)
}
prvResults[j] <- calc_multivariate_dtw(data = matrix.list, scaled = T)
}
prvResults
hist(prvResults)
summary(prvResults)
library(rgl)
data(volcano)
r <- raster(volcano)
extent(r) <- c(0, 610, 0, 870)
## level plot as reference
levelplot(r, col.regions=terrain.colors)
plot3D(r)
library(rasterVis)
data(volcano)
r <- raster(volcano)
extent(r) <- c(0, 610, 0, 870)
## level plot as reference
levelplot(r, col.regions=terrain.colors)
plot3D(r)
dim(readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Input_data/_soils/Water_balance/Europa/303086.rds"))
dim(readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Input_data/_soils/Water_balance/Europa/303085.rds"))
dim(readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Input_data/_soils/Water_balance/Europa/303087.rds"))
head(readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Input_data/_soils/Water_balance/Europa/303087.rds"))
head(readRDS("//dapadfs/Workspace_cluster_9/CWR_pre-breeding/Input_data/_soils/Water_balance/Europa/235572.rds"))
r
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(parallel)){install.packages('parallel'); library(parallel)} else {library(parallel)})
suppressMessages(if(!require(googlesheets)){install.packages("googlesheets");library(googlesheets)}else{library(googlesheets)})
suppressMessages(if(!require(parallelDist)){install.packages("parallelDist");library(parallelDist)}else{library(parallelDist)})
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){
root <- "/mnt/workspace_cluster_9"
base <- readRDS(paste0(root, "/CWR_pre-breeding/Input_data/AgMerra_template.RDS"))
} else {
if(OSys == "Windows"){
root <- "//dapadfs/Workspace_cluster_9"
base <- readRDS(paste0(root, "/CWR_pre-breeding/Input_data/AgMerra_template.RDS"))
}
}; rm(OSys)
plot3D(base)
r <- raster(system.file("external/test.grd", package="raster"))
s <- stack(r, r*2)
names(s) <- c('meuse', 'meuse x 2')
library(ggplot2)
theme_set(theme_bw())
gplot(s) + geom_tile(aes(fill = value)) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
devtools::install_github("Jean-Romain/rlas", dependencies=TRUE)
devtools::install_github("Jean-Romain/lidR", dependencies=TRUE)
g <- gc(reset = T); rm(list = ls()); options(warn = -1); options(scipen = 999)
library(tidyverse)
watbal_dir <- "//mnt/workspace_cluster_9/CWR_pre-breeding/Input_data/_soils/Water_balance"
continentList <- c("Africa", "America", "Asia", "Oceania") # "Europa"
i=3
continentList <- c("Africa", "America", "Asia", "Oceania") # "Europa"
df <- readRDS(paste0(watbal_dir, "/watbal_", tolower(continentList[i]), ".rds"))
145/2
100/7
99 * 7
1782/3
594/99
install.packages(c("bindr", "hms", "ICSNP", "igraph", "mlr", "spData", "stringi", "survey", "yaml"))
