g <- gc(reset = T); rm(list = ls()); options(warn = -1); options(scipen = 999)
agmerra_dir <- Sys.info(); agmerra_dir <- agmerra_dir[names(amgerra_dir)=="sysname"]
g <- gc(reset = T); rm(list = ls()); options(warn = -1); options(scipen = 999)
chirps_dir <- Sys.info(); chirps_dir <- chirps_dir[names(chirps_dir)=="sysname"]
import arcgisscripting, os, sys, string, glob
gp = arcgisscripting.create(9.3)
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
crop <- "bean"
source("01_cwr_id_occurrence_data.R")
system.time(exp = {occ_data <- crop_area_id(crop = crop); rm(crop_area_id)})
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
crop <- "bean"
source("01_cwr_id_occurrence_data.R")
system.time(exp = {occ_data <- crop_area_id(crop = crop); rm(crop_area_id)})
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(maptools)){install.packages('maptools'); library(maptools)} else {library(maptools)})
suppressMessages(if(!require(ff)){install.packages('ff'); library(ff)} else {library(ff)})
suppressMessages(if(!require(data.table)){install.packages('data.table'); library(data.table)} else {library(data.table)})
suppressMessages(if(!require(miscTools)){install.packages('miscTools'); library(miscTools)} else {library(miscTools)})
suppressMessages(if(!require(rgdal)){install.packages('rgdal'); library(rgdal)} else {library(rgdal)})
suppressMessages(if(!require(foreach)){install.packages('foreach'); library(foreach)} else {library(foreach)})
suppressMessages(if(!require(mgcv)){install.packages('mgcv'); library(mgcv)} else {library(mgcv)})
suppressMessages(if(!require(rasterVis)){install.packages('rasterVis'); library(rasterVis)} else {library(rasterVis)})
suppressMessages(if(!require(stringr)){install.packages('stringr'); library(stringr)} else {library(stringr)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(mapdata)){install.packages('mapdata'); library(mapdata)} else {library(mapdata)})
suppressMessages(if(!require(ggplot2)){install.packages('ggplot2'); library(ggplot2)} else {library(ggplot2)})
suppressMessages(if(!require(factoextra)){install.packages('factoextra'); library(factoextra)} else {library(factoextra)})
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
mapspam <- raster::stack(paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/", crop, "_mapspam.nc", sep = ""))
monfreda <- raster::stack(paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/",crop, "_monfreda.nc", sep = ""))
occ_data <- read.csv(paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/", crop, "_genesys.csv", sep = ""))
crop_info <- list(mapspam, monfreda, occ_data); names(crop_info) <- c("mapspam", "monfreda", "occ_data")
rm(mapspam, monfreda, occ_data)
crop_info$mapspam[which(crop_info$mapspam[] <= 0)] <- NA
crop_info$mapspam[which(crop_info$mapspam[] > 0)] <- 1
crop_info$monfreda[which(crop_info$monfreda[] <= 0)] <- NA
crop_info$monfreda[which(crop_info$monfreda[] > 0)] <- 1
tmpStack <- raster::stack(crop_info$mapspam,
crop_info$monfreda)
rasterSum <- sum(tmpStack, na.rm = T)
rasterSum[rasterSum[] == 0] <- NA
tmpStack[[3]] <- rasterSum; rm(rasterSum)
names(tmpStack) <- c("MapSPAM", "Monfreda", "MapSPAM_Monfreda")
if(!file.exists(paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/plots/occurrence_data_", crop, "_maps.png", sep = ""))){
detach(package:factoextra)
detach(package:ggplot2)
# Load shapefile worldwide
data(wrld_simpl)
trellis.device(device="png", filename= paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/plots/occurrence_data_", crop, "_maps.png", sep = ""), width = 3000, height = 2000, units = "px", res = 300)
mapTheme <- rasterTheme(region = brewer.pal(3,"BrBG")) ## gusta 2
p <- levelplot(tmpStack, margin = F, par.settings = mapTheme) + layer(sp.polygons(wrld_simpl, lwd = 0.1, col = 'gray')) #c('palegreen', 'indianred1')
print(p)
dev.off()
rm(p, wrld_simpl)
}
if(!file.exists(paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/plots/occurrence_data_", crop, "_agreement.png", sep = ""))){
agreeMapspam <- raster::extract(x = tmpStack[[1]], y = crop_info$occ_data[,c("longitude","latitude")])
agreeMapspam <- sum(agreeMapspam, na.rm = T)/nrow(crop_info$occ_data)
agreeMonfreda <- raster::extract(x = tmpStack[[2]],y = crop_info$occ_data[,c("longitude","latitude")])
agreeMonfreda <- sum(agreeMonfreda, na.rm = T)/nrow(crop_info$occ_data)
agreeSum <- raster::extract(x = tmpStack[[3]],y = crop_info$occ_data[,c("longitude","latitude")])
agreeSum <- length(agreeSum[which(agreeSum == 2)])/nrow(crop_info$occ_data)
agree <- data.frame(Dataset = factor(x = c("MapSPAM", "Monfreda", "MapSPAM & Monfreda"), levels = c("MapSPAM", "Monfreda", "MapSPAM & Monfreda")), Percentage = c(agreeMapspam, agreeMonfreda, agreeSum))
rm(agreeMapspam, agreeMonfreda, agreeSum)
if(!dir.exists(paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/plots", sep = ""))){
dir.create(path = paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/plots", sep = ""), recursive = T)
}
gg <- agree %>% ggplot(aes(x=Dataset, y=Percentage * 100)) + geom_bar(stat="identity", fill="steelblue") + theme_bw()
gg <- gg + ylab("Percentage (%)") + ggtitle(label = "Agreement between Genesys and raster sources")
gg <- gg + scale_y_continuous(limits = c(0, 100))
ggsave(filename = paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/plots/occurrence_data_", crop, "_agreement.png", sep = ""), plot = gg, width = 5, height = 5.5, units = "in")
rm(gg, agree, tmpStack)
}
tmpStack$MapSPAM_Monfreda[which(tmpStack$MapSPAM_Monfreda[]==2)] <- 1
data_matrix <- as.data.frame(rasterToPoints(tmpStack$MapSPAM_Monfreda))
cellID <- cellFromXY(object =tmpStack$MapSPAM_Monfreda, xy = data_matrix[,c("x", "y")])
data_matrix <- cbind(cellID, data_matrix[,c("x", "y")]); colnames(data_matrix) <- c("cellID", "lon", "lat")
occ_data <- data_matrix
View(occ_data)
write.csv(occ_data, paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/occ_data_sum.csv"))
paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/occ_data_sum.csv")
paste(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/occ_data_sum.csv", sep = "")
g <- gc()
rm(list = ls())
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
# loop by crop
crop <- "bean"
# Step 1: Crop area identification
source("01_cwr_id_occurrence_data.R")
system.time(exp = {occ_data <- crop_area_id(crop = crop); rm(crop_area_id)})
plot(occ_data[,2:3])
exists("occ_data")
!exists("occ_data")
paste0(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/occ_data_sum.csv")
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
paste0(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/occ_data_sum.csv")
paste0(root, "/CWR_pre-breeding/Input_data/presence_data")
paste(root, "/CWR_pre-breeding/Input_data/presence_data")
paste(root, "/CWR_pre-breeding/Input_data/presence_data", sep  = "")
source("02_cwr_id_crop_growing_cycle.R")
system.time(exp = {occ_data <- crop_cycle_id(crop = crop, occ_data = occ_data); rm(crop_cycle_id)})
crop_list <- tolower(list.files(path = paste0(root, "/CWR_pre-breeding/Input_data/presence_data"), full.names = F))
crop_list
ggcmi_lst <- c("Pulses", NA, "Barley", NA, rep("Pulses", 3), NA, "Millet", rep("Pulses", 2), "Millet", "Pulses", "Potatoes", "Rice", "Sorghum", "Sunflower", NA, "Wheat")
ggcmi_lst
ggcmi_lst <- c("Pulses", NA, "Barley", rep("Pulses", 4), NA, "Millet", rep("Pulses", 2), "Millet", "Pulses", "Potatoes", "Rice", "Sorghum", "Sunflower", NA, "Wheat")
ggcmi_lst
source("02_cwr_id_crop_growing_cycle.R")
system.time(exp = {occ_data <- crop_cycle_id(crop = crop, occ_data = occ_data); rm(crop_cycle_id)})
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(maptools)){install.packages('maptools'); library(maptools)} else {library(maptools)})
suppressMessages(if(!require(ff)){install.packages('ff'); library(ff)} else {library(ff)})
suppressMessages(if(!require(data.table)){install.packages('data.table'); library(data.table)} else {library(data.table)})
suppressMessages(if(!require(miscTools)){install.packages('miscTools'); library(miscTools)} else {library(miscTools)})
suppressMessages(if(!require(rgdal)){install.packages('rgdal'); library(rgdal)} else {library(rgdal)})
suppressMessages(if(!require(foreach)){install.packages('foreach'); library(foreach)} else {library(foreach)})
# suppressMessages(if(!require(doMC)){install.packages('doMC'); library(doMC)} else {library(doMC)})
suppressMessages(if(!require(mgcv)){install.packages('mgcv'); library(mgcv)} else {library(mgcv)})
suppressMessages(if(!require(rasterVis)){install.packages('rasterVis'); library(rasterVis)} else {library(rasterVis)})
suppressMessages(if(!require(stringr)){install.packages('stringr'); library(stringr)} else {library(stringr)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(mapdata)){install.packages('mapdata'); library(mapdata)} else {library(mapdata)})
suppressMessages(if(!require(ggplot2)){install.packages('ggplot2'); library(ggplot2)} else {library(ggplot2)})
suppressMessages(if(!require(corrplot)){install.packages('corrplot'); library(corrplot)} else {library(corrplot)})
suppressMessages(if(!require(FactoMineR)){install.packages('FactoMineR'); library(FactoMineR)} else {library(FactoMineR)})
suppressMessages(if(!require(factoextra)){install.packages('factoextra'); library(factoextra)} else {library(factoextra)})
suppressMessages(if(!require(leaflet)){install.packages('leaflet'); library(leaflet)} else {library(leaflet)})
suppressMessages(if(!require(Rtsne)){install.packages('Rtsne'); library(Rtsne)} else {library(Rtsne)})
suppressMessages(if(!require(readr)){install.packages('readr'); library(readr)} else {library(readr)})
suppressMessages(if(!require(dbscan)){install.packages('dbscan'); library(dbscan)} else {library(dbscan)})
suppressMessages(if(!require(zoom)){install.packages('zoom'); library(zoom)} else {library(zoom)})
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
if(!exists("occ_data")){
occ_data <- read.csv(paste0(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/occ_data_sum.csv"))
}
occ_data <- read.csv(paste0(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/occ_data_sum.csv"))
View(occ_data)
?write.csv
View(occ_data)
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
crop <- "bean"
# Step 1: Crop area identification
source("01_cwr_id_occurrence_data.R")
system.time(exp = {occ_data <- crop_area_id(crop = crop); rm(crop_area_id)})
crop <- "bean"
# Step 1: Crop area identification
source("01_cwr_id_occurrence_data.R")
system.time(exp = {occ_data <- crop_area_id(crop = crop); rm(crop_area_id)})
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
# loop by crop
crop <- "bean"
# Step 1: Crop area identification
source("01_cwr_id_occurrence_data.R")
system.time(exp = {occ_data <- crop_area_id(crop = crop); rm(crop_area_id)})
View(occ_data)
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(maptools)){install.packages('maptools'); library(maptools)} else {library(maptools)})
suppressMessages(if(!require(ff)){install.packages('ff'); library(ff)} else {library(ff)})
suppressMessages(if(!require(data.table)){install.packages('data.table'); library(data.table)} else {library(data.table)})
suppressMessages(if(!require(miscTools)){install.packages('miscTools'); library(miscTools)} else {library(miscTools)})
suppressMessages(if(!require(rgdal)){install.packages('rgdal'); library(rgdal)} else {library(rgdal)})
suppressMessages(if(!require(foreach)){install.packages('foreach'); library(foreach)} else {library(foreach)})
# suppressMessages(if(!require(doMC)){install.packages('doMC'); library(doMC)} else {library(doMC)})
suppressMessages(if(!require(mgcv)){install.packages('mgcv'); library(mgcv)} else {library(mgcv)})
suppressMessages(if(!require(rasterVis)){install.packages('rasterVis'); library(rasterVis)} else {library(rasterVis)})
suppressMessages(if(!require(stringr)){install.packages('stringr'); library(stringr)} else {library(stringr)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(mapdata)){install.packages('mapdata'); library(mapdata)} else {library(mapdata)})
suppressMessages(if(!require(ggplot2)){install.packages('ggplot2'); library(ggplot2)} else {library(ggplot2)})
suppressMessages(if(!require(corrplot)){install.packages('corrplot'); library(corrplot)} else {library(corrplot)})
suppressMessages(if(!require(FactoMineR)){install.packages('FactoMineR'); library(FactoMineR)} else {library(FactoMineR)})
suppressMessages(if(!require(factoextra)){install.packages('factoextra'); library(factoextra)} else {library(factoextra)})
suppressMessages(if(!require(leaflet)){install.packages('leaflet'); library(leaflet)} else {library(leaflet)})
suppressMessages(if(!require(Rtsne)){install.packages('Rtsne'); library(Rtsne)} else {library(Rtsne)})
suppressMessages(if(!require(readr)){install.packages('readr'); library(readr)} else {library(readr)})
suppressMessages(if(!require(dbscan)){install.packages('dbscan'); library(dbscan)} else {library(dbscan)})
suppressMessages(if(!require(zoom)){install.packages('zoom'); library(zoom)} else {library(zoom)})
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
crop_list <- tolower(list.files(path = paste0(root, "/CWR_pre-breeding/Input_data/presence_data"), full.names = F))
ggcmi_lst <- c("Pulses", NA, "Barley", rep("Pulses", 4), NA, "Millet", rep("Pulses", 2), "Millet", "Pulses", "Potatoes", "Rice", "Sorghum", "Sunflower", NA, "Wheat")
if(crop %in% crop_list){
crop_ggcmi <- ggcmi_lst[which(crop_list == crop)]
}
planting_rf_ggcmi <- raster::brick(paste(root, "/CWR_pre-breeding/Input_data/GGCMI-data/", crop_ggcmi, "_rf_growing_season_dates_v1.25.nc4", sep = ""), varname = "planting day")
planting_rf_ggcmi <- planting_rf_ggcmi[[1]]
harvest_rf_ggcmi <- raster::brick(paste(root, "/CWR_pre-breeding/Input_data/GGCMI-data/", crop_ggcmi, "_rf_growing_season_dates_v1.25.nc4", sep = ""), varname = "harvest day")
harvest_rf_ggcmi <- harvest_rf_ggcmi[[1]]
planting <- raster::extract(x = planting_rf_ggcmi, y = occ_data[,c("lon", "lat")])
harvest <- raster::extract(x = harvest_rf_ggcmi, y = occ_data[,c("lon", "lat")])
occ_data <- cbind(occ_data, planting, harvest); rm(planting, harvest, planting_rf_ggcmi, harvest_rf_ggcmi)
occ_data$planting[which(occ_data$planting == "-99")] <- NA
occ_data$harvest[which(occ_data$harvest == "-99")] <- NA
if(!file.exists(paste(root, "/CWR_pre-breeding/Input_data/precense_data/",crop_ggcmi,"/plots/summary_of_missing_data_/",crop_ggcmi," .png"))){
## Proporcion de NA
total <-  length(occ_data$planting)
x <- sum(is.na(occ_data$planting) & !is.na(occ_data$harvest))/total
y <- sum(!is.na(occ_data$planting) & is.na(occ_data$harvest))/total
z <- sum(is.na(occ_data$planting) & is.na(occ_data$harvest))/total
df <- data.frame(trt = c('Planting','Harvest','Planting & Harvest'), outcome= c(x,y,z))
gg <- ggplot(df, aes(trt, outcome)) +geom_col()
gg <- gg + labs(title="Summary of Missing Data", y="Proportion of Na", x= "Variables")
gg
rm(x,y,z,total,df,gg)
}
occ_data <- occ_data[complete.cases(occ_data),]; rownames(occ_data) <- 1:nrow(occ_data)
occ_data$cycle_length <- abs(occ_data$harvest - occ_data$planting)
occ_data$condition  <- NA
occ_data$condition[which((occ_data$harvest - occ_data$planting)> 0)] <- "One year"
occ_data$condition[which((occ_data$harvest - occ_data$planting)< 0)] <- "Two years"
head(occ_data)
write.csv(occ_data, file(paste0(root, "/CWR_pre-breeding/Input_data/presence_data/Potato/database/occ_data_full.csv")))
str_to_title(crop)
write.csv(occ_data, file(paste0(root, "/CWR_pre-breeding/Input_data/presence_data/", str_to_title(crop), "/database/occ_data_full.csv")))
View(occ_data)
suppressMessages(if(!require(raster)){install.packages('raster'); library(raster)} else {library(raster)})
suppressMessages(if(!require(ncdf4)){install.packages('ncdf4'); library(ncdf4)} else {library(ncdf4)})
suppressMessages(if(!require(maptools)){install.packages('maptools'); library(maptools)} else {library(maptools)})
suppressMessages(if(!require(ff)){install.packages('ff'); library(ff)} else {library(ff)})
suppressMessages(if(!require(data.table)){install.packages('data.table'); library(data.table)} else {library(data.table)})
suppressMessages(if(!require(miscTools)){install.packages('miscTools'); library(miscTools)} else {library(miscTools)})
suppressMessages(if(!require(rgdal)){install.packages('rgdal'); library(rgdal)} else {library(rgdal)})
suppressMessages(if(!require(foreach)){install.packages('foreach'); library(foreach)} else {library(foreach)})
suppressMessages(if(!require(mgcv)){install.packages('mgcv'); library(mgcv)} else {library(mgcv)})
suppressMessages(if(!require(rasterVis)){install.packages('rasterVis'); library(rasterVis)} else {library(rasterVis)})
suppressMessages(if(!require(stringr)){install.packages('stringr'); library(stringr)} else {library(stringr)})
suppressMessages(if(!require(tidyverse)){install.packages('tidyverse'); library(tidyverse)} else {library(tidyverse)})
suppressMessages(if(!require(mapdata)){install.packages('mapdata'); library(mapdata)} else {library(mapdata)})
suppressMessages(if(!require(ggplot2)){install.packages('ggplot2'); library(ggplot2)} else {library(ggplot2)})
suppressMessages(if(!require(FactoMineR)){install.packages('FactoMineR'); library(FactoMineR)} else {library(FactoMineR)})
suppressMessages(if(!require(FactoClass)){install.packages('FactoClass'); library(FactoClass)} else {library(FactoClass)})
suppressMessages(if(!require(ade4)){install.packages('ade4'); library(ade4)} else {library(ade4)})
suppressMessages(if(!require(xtable)){install.packages('xtable'); library(xtable)} else {library(xtable)})
suppressMessages(if(!require(ggdendro)){install.packages('ggdendro'); library(ggdendro)} else {library(ggdendro)})
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
base <- raster::stack("//dapadfs/data_cluster_5/cropdata/agmerra/daily/nc-files/srad_daily_ts_agmerra_1980_2010.nc")
base <- base[[1]]
base <- rotate(base)
base <- raster::stack("//dapadfs/data_cluster_5/cropdata/agmerra/daily/nc-files/srad_daily_ts_agmerra_1980_2010.nc")
base <- raster::stack("//dapadfs/data_cluster_5/cropdata/agmerra/daily/nc-files/srad_daily_ts_agmerra_1980_2010.nc")
